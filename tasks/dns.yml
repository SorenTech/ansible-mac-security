---
- name: Clone Stephen Black Hosts
  ansible.builtin.git:
    repo: https://github.com/StevenBlack/hosts.git
    dest: /usr/local/hosts
    force: true

- name: Install Hosts Updater Dependencies
  ansible.builtin.pip:
    chdir: /usr/local/hosts
    requirements: requirements.txt
    extra_args: --user 

- name: Generate Hosts File
  ansible.builtin.shell: 
    chdir: /usr/local/hosts 
    cmd: python3 updateHostsFile.py --auto --replace --flush-dns-cache --extensions fakenews gambling porn
    
# - name: Move HostsUpdater.Plist to Library/LaunchDaemons
#  fetch:
#    src: "files/local.baseline.hostsupdater.plist"
#    dest: "/Library/LaunchDaemons/local.baseline.hostsupdater.plist"
#    become: yes
  
# - name: Enable HostsUpdater.Plist Launch Daemon
#  community.general.launchd:
#    name: local.baseline.hostsupdater
#    state: started
#    become: yes

- name: configure dns packages
  fetch:
    src: "files/{{ item.src }}"
    dest: "/usr/local/etc/{{ item.dest }}"
    flat: yes
  loop:
    - { src: dnscrypt-proxy.toml, dest: dnscrypt-proxy.toml }
    - { src: dnsmasq.conf, dest: dnsmasq.conf } 

- name: start homebrew services
  shell: "brew services start {{ item }}"
  become: True
  tags: ['homebrew']
  loop:
    - dnscrypt-proxy
    - dnsmasq

- name: check network services for Wifi
  shell: networksetup -listallnetworkservices | grep -c "Wi-Fi"
  register: wifi_active
  failed_when: wifi_active.rc != 1 and wifi_active.rc != 0

- name: check network services for Ethernet
  shell: networksetup -listallnetworkservices | grep -c "Ethernet"
  register: ethernet_active
  failed_when: ethernet_active.rc != 1 and ethernet_active.rc != 0

- name: change Wi-Fi DNS servers
  shell: networksetup -setdnsservers "Wi-Fi" 127.0.0.1
  become: True
  when: wifi_active.rc == 0
  ignore_errors: true

- name: change Ethernet DNS servers
  shell: networksetup -setdnsservers "Ethernet" 127.0.0.1
  become: True
  when: ethernet_active.rc == 0
  ignore_errors: true
